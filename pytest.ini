[tool:pytest]
# Comprehensive test configuration for the URL shortener project
# This configuration ensures all test aspects are covered:
# - Functionality
# - Integration  
# - Response types
# - Response data
# - Business logic

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    functionality: Tests basic functionality of components
    integration: Tests integration between components and external systems
    response_types: Tests correct response types and HTTP status codes
    response_data: Tests correct response data structure and values
    business_logic: Tests business logic correctness and rules
    error_handling: Tests error handling and edge cases
    performance: Tests performance characteristics
    unit: Unit tests for individual components
    api: API endpoint tests
    services: Service layer tests
    models: Model and schema tests
    slow: Tests that take longer to run

# Async configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Output configuration
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10
    --maxfail=5
    --cov=app
    --cov-report=html:tests/reports/coverage_html
    --cov-report=xml:tests/reports/coverage.xml
    --cov-report=term-missing
    --cov-fail-under=80
    --junitxml=tests/reports/junit.xml

# Coverage configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */migrations/*
    */alembic/*
    */__pycache__/*
    */venv/*
    */env/*
    */site-packages/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Test timeout configuration
timeout = 300
timeout_method = thread

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:sqlalchemy.*
    ignore::UserWarning:pytest.*